---

- name: Get cdeployment-databases github project
  git:
    repo: "{{ deployment_databases_git }}"
    version: master
    dest: "{{ deployment_databases_git_path }}"
    force: yes

- name: Get deployment k8s application scala github project
  git:
    repo: "{{ deployment_k8s_application_scala_git }}"
    version: master
    dest: "{{ deployment_k8s_application_scala_git_path }}"
    force: yes

- name: Make my directory tree readable & executable
  file:
    path: "{{ deployment_databases_git_path }}/terraform"
    mode: 0777

- name: Create directory for gce creds
  file:
    path: "{{ path_key_gcp_remote }}"
    state: directory
    mode: 0777

- name: Copy GCP credentials
  copy:
    src:  "{{ path_key_gcp_local }}"
    dest: "{{ path_key_gcp_remote }}"
    mode: 0777

- name: Copy ssh google_compute_engine to acces to instances
  copy:
    src:  "{{ ssh_gcp }}"
    dest: "{{ ssh_gcp }}"
    mode: 0777
  vars:
    ssh_gcp: ~/.ssh/google_compute_engine

- name: Copy Script for ssh config file
  copy:
    src:  ./files/sshConfig.sh
    dest: /home/{{ ansible_user }}/.ssh
    mode: 0777

- name: Configure tfvars for gcp provider access.
  file:
    dest: "{{ deployment_databases_git_path }}/terraform/"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
    mode: 0777

- name: Configure tfvars for gcp provider access for deployment databases.
  template:
    src: "templates/terraform.tfvars.deploymentDB.j2"
    dest: "{{ deployment_databases_git_path }}/terraform/terraform.tfvars"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0600

- name: Configure tfvars for gcp provider access for deployment k8s.
  template:
    src: "templates/terraform.tfvars.deploymentK8S.j2"
    dest: "{{ deployment_k8s_application_scala_git_path }}/k8s-cluster/terraform.tfvars"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0600